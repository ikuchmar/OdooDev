# ==============================
# Генерация КАРТИНОК по ТЕКСТОВЫМ файлам
# ==============================

# --- Источники (аналогично твоему примеру) ---
input_dirs = [
  "D://Entertaimant//Английский//! свои рассказы//Урок 4"
]
recursive = true

# Можно явно перечислить файлы
input_files = [
  # "D:/Texts/one.txt",
  # "D:/Texts/two.md"
]

# Какие расширения считаем текстовыми
text_exts = [".txt", ".md", ".rst"]

# --- Фильтрация имён (по stem, без расширения, без учёта регистра) ---
exclude_suffixes = ["_ru", "_draft"]
include_suffixes = []           # если НЕ пусто — брать ТОЛЬКО с этими суффиксами

# --- Куда сохранять ---
output_dir = ""                 # "" => рядом с исходным файлом
mirror_subdirs = true           # «зеркалить» структуру подпапок если output_dir задан
output_suffix = "_img"          # суффикс к имени картинки ("" — без суффикса)
conflicts = "overwrite"         # "skip"|"overwrite"|"rename"
dry_run = false
workers = 0                     # 0/1 — последовательно; >1 — в несколько потоков
log_file = ""                   # "" — без файла лога

# --- OpenAI / ChatGPT изображения ---
[openai]
# API-ключ: либо тут, либо через переменную окружения OPENAI_API_KEY
api_key = ""                    # "sk-..." или оставь пустым и используй переменную окружения
model = "gpt-image-1"
openai_size = "1024x1024"       # допустимо: "256x256" | "512x512" | "1024x1024"
n = 1                           # сколько картинок на один текст

# Как формировать prompt из текстового файла
# "filename"     — только имя файла (без расширения)
# "first_line"   — первая непустая строка
# "content"      — весь текст (обрезается до max_chars)
prompt_from = "first_line"
max_chars = 1200                # ограничение длины, если prompt_from="content"

# Добавочные фразы к промпту (удобно навязывать стиль/детали)
prompt_prefix = ""              # например: "Minimalistic flat illustration, "
prompt_suffix = ", 16:9, clean, soft lighting"

# --- «Размеры как во вложении» (точные размеры итогового файла) ---
# Картинка от модели может быть 1024x1024. Если надо получить, например, 1920x1080,
# включай resize_after=true и задавай width/height ниже — будет ресайз через Pillow.
[image]
resize_after = true
width = 1920
height = 1080
format = "png"                  # "png" | "jpg" | "webp"
jpeg_quality = 90
