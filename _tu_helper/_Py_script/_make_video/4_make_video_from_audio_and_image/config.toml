# =========================
# Конфигурация make_video_from_audio_and_image
# =========================
# Файл TOML читается скриптом из того же каталога, где сам скрипт.
# Все параметры указаны с примерами и комментариями.
# Значения по умолчанию описаны в комментариях — при необходимости измените.

# --------- Основной ввод ----------
[input]
# Режим источника аудио:
#   "dir"       — брать все аудио из папки input_dir (ниже), с опцией рекурсии.
#   "file_list" — брать список аудио из текстового файла file_list_path (по одному пути на строку).
mode = "dirs"  # варианты: "dir" | "file_list"

# Если mode = "dir"
#input_dir = "D:/Media/audio_input"   # папка с аудио
#input_dir = "D://Entertaimant//Английский//! свои рассказы//Урок 1"   # папка с аудио

# Если mode = "dirs" — список папок с аудио:
input_dirs = ['D:/Entertaiment/Английский/data/Урок 01']
    #  "D://Entertaimant//Английский//! свои рассказы//Урок 2",
    #  "D://Entertaimant//Английский//! свои рассказы//Урок 3"

recurse = true                       # рекурсивно обходить подпапки (true/false)

# Если mode = "file_list"
#   Формат файла: по ОДНОМУ пути к аудио на строку. Можно абсолютные/относительные.
file_list_path = "audio_list.txt"

# Расширения аудио и изображений (без точки, регистр не важен)
audio_exts = ["mp3", "wav", "m4a", "flac", "aac", "ogg"]
image_exts = ["jpg", "jpeg", "png", "webp"]

# Где искать изображения:
#   ПУСТОЙ список => искать только в той же папке, где лежит аудио.
#   Или укажите дополнительные папки (абсолютные или относительные).
image_search_dirs = []  # пример: ["D:/Media/images", "../common_images"]

# Подбор имен изображений:
# Для аудио "track01.mp3" стем = "track01".
# Скрипт ищет:
#   1) точное совпадение: track01.jpg|png|...
#   2) варианты с суффиксами: track01_with_text.jpg, track01_text.png, track01_001.png и т.д.
# ЭТОТ СПИСОК — ФИЛЬТР ДОПУСТИМЫХ СУФФИКСОВ (И МАСКА ИМЕН).
#   - Если список пуст ["*"] или "*", то принимаем ЛЮБОЙ суффикс (включая пустой).
#   - Если задать конкретные, то берем ТОЛЬКО их.
# ВАЖНО: теперь мы НЕ выбираем один приоритетный — а делаем видео для КАЖДОГО найденного изображения.
# Примеры значений:
#   ["", "_with_text", "_text", "_t"] — только эти суффиксы, плюс точное имя ("")
#   ["*"] — любые суффиксы подходят
#image_suffixes = ["", "_with_text", "_text", "_t", "_1", "_2"]
image_suffixes = ["*"]
# Чтобы разрешить любые — замените на ["*"].

[slideshow]
enabled = true                  # true — один ролик-слайдшоу иначе по ролику на каждый файл
order = "name"                  # "name" | "mtime"
source = "auto"                 # "auto"|"file"|"suffix"|"auto_equal"
timings_file_ext = ".slides.txt"# имя файла-таймингов: <stem><ext> рядом с аудио
min_image_sec = 0.3             # минимальная длительность кадра
fill_policy = "stretch_last"    # "stretch_last"|"scale_all"|"clip"
delete_images_after = true

# --------- Вывод ----------
[output]
# Папка для готовых видео. Будет создана автоматически.
#dir = "D:/Media/video_output"
dir = ""
#dir = "D://Entertaimant//Английский//! свои рассказы//Видео2"

# Поведение при существующем целевом файле (имя видео = имя картинки + ".mp4"):
#   "skip"      — пропустить создание, если файл уже есть
#   "overwrite" — перезаписать
#   "rename"    — автоматически добавлять суффикс -1, -2, ... чтобы не затирать
on_exists = "rename"  # варианты: "skip" | "overwrite" | "rename"

# Расширение выходного файла (обычно mp4)
ext = "mp4"

# --------- Параметры видео/аудио (FFmpeg) ----------
[encode]
# Целевое разрешение
width = 1920
height = 1080

# Кадровая частота
fps = 30

# Режим вписывания картинки:
#   "fit"   — вписать с сохранением пропорций и добавить поля (pad) по бокам при необходимости
#   "cover" — покрыть весь кадр, обрезая лишнее (crop)
scale_mode = "fit"    # варианты: "fit" | "cover"

# Цвет полей (только для fit): можно hex "#RRGGBB" или названия вроде "black", "white".
pad_color = "#000000"

# Видеокодек и пресет/качество
vcodec = "libx264"
preset = "veryfast"
crf = 18           # 18-23 — разумные значения для H.264; меньше -> лучше качество/больше размер

# Пиксельный формат (yuv420p нужен для совместимости)
pix_fmt = "yuv420p"

# Аудио: кодек и битрейт
acodec = "aac"
abitrate = "192k"

# Доп. флаги: +faststart полезен для быстрой загрузки при онлайн-плеере
movflags = "+faststart"

# Путь к ffmpeg. Если пусто — берем из PATH.
ffmpeg_path = ""   # пример: "C:/ffmpeg/bin/ffmpeg.exe"

# Количество потоков (нити) для ffmpeg (0 или пусто — не указывать, пусть решает ffmpeg)
threads = 0

# --------- Логи ----------
[logging]
# Уровень логов: "DEBUG" | "INFO" | "WARNING" | "ERROR"
level = "INFO"

# Путь к лог-файлу ("" — лог в файл отключен)
file = "make_video.log"
