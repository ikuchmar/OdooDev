Как я понял задачу (новая логика: текст → картинки)

Точка отсчёта — текстовые файлы.
Скрипт берёт за основу список .txt (UTF-8) — из указанных папок (с рекурсией) и/или из явного списка файлов.

По каждому .txt ищутся связанные изображения в той же папке:

Обязательная пара: изображение с тем же базовым именем (note.txt ↔ note.jpg|png|webp|…).

Дополнительные варианты с суффиксом у картинки: нужно обрабатывать все изображения, которые начинаются с того же базового имени и имеют добавку-суффикс. Примеры, если текст — promo.txt:

promo.jpg (точное совпадение)

promo_1.jpg, promo-2.png, promo (final).png, promo@2x.webp, promo_v3.jpeg (варианты с суффиксом)

Т.е. одна текстовая карточка может породить несколько выходных картинок (по количеству найденных изображений, подходящих по шаблону).

Если для .txt не найдено ни одной картинки — этот .txt пропускается без ошибок; процесс идёт дальше.

Наложение текста — как и раньше: белый текст, автоперенос, автоподбор размера до минимума (14 px), выравнивание/позиция/отступы/читабельность (контур/подложка/оба/ничего) — всё управляется из конфига.

Сохранение результата:

В output_dir (или рядом) по выбранной схеме именования.

Для вариантов с суффиксом имя сохраняется с учётом исходного имени картинки (т.е. promo_1.jpg → promo_1_with_text.jpg, если режим suffix).

Поддержка overwrite/suffix/skip_if_exists.

Формат вывода — как у исходника (или принудительный).

Форматы:

Картинки: .jpg/.jpeg/.png/.webp (по умолчанию).

Тексты: строго .txt (UTF-8).

Поиск/сопоставление картинок — настраиваемый:

Режим поиска суффиксов по умолчанию — prefix-match: «имя_текста» должно быть префиксом имени картинки; допустимы разделители ["_", "-", " ", "(", ")"] и распространённые хвосты (\d+, v\d+, @2x/@3x, слова).

В конфиг добавлю опции:

image_match_mode: "exact" | "prefix" (по умолчанию "prefix").

prefix_delimiters: список допустимых разделителей.

allowed_suffix_patterns: список regex-шаблонов суффиксов (например, ["\\d+", "v\\d+", "@\\dx", ".+"]).

max_images_per_text: 0 = без лимита (если захочешь ограничить).

Ошибки и устойчивость:

По любому отдельному файлу — логируем и идём дальше.

Итоговая статистика: сколько .txt обработано, сколько пар найдено, сколько картинок создано, сколько пропущено (нет картинок), сколько ошибок.

Запуск — без параметров, всё берётся из config.toml рядом со скриптом.