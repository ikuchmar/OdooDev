# =========================
# Конфигурация TTS Batch Reader (TOML)
# =========================
# Файл читается из того же каталога, где лежит tts_batch_reader.py.
# Комментарии — обычные `#`. Спец-ключи с "_" не требуются.

# --------- Вход ---------
# Список папок и/или масок. Можно абсолютные/относительные пути.
# Примеры:
#   "data"                       # папка
#   "data/*.txt"                 # маска
#   "D://Entertaimant//...//Урок 4"  # абсолютный путь
input_dirs = [
    "D://Entertaimant//Английский//! свои рассказы//Урок 4"
]

# Рекурсивно обходить подпапки при работе с папками/масками (аналог recursive_inputs)
recurse = true

# Какие расширения файлов брать (с точкой)
extensions = [".txt"]

# Какие языки озвучивать по умолчанию, если не сработал жёсткий суффикс
enable_languages = ["en", "ru", "uk"]

# --------- Языки ---------
# Каждый язык описывается таблицей [[languages.<код>]], см. примеры ниже.
# Поля языка:
#   voice              — основной голос
#   alt_voices         — альтернативные голоса (fallback)
#   strict_no_fallback — если true, не переключаться на alt_voices при ошибке
#   markers            — явные маркеры языка в тексте
#   [languages.<code>.suffix_filter]
#       enabled=true/false
#       suffix="_en"   — если имя файла оканчивается на suffix и enabled=true,
#                        файл озвучивается только этим языком
#   detect_prefixes    — соответствия кодов langdetect
#   [languages.<code>.voice_aliases]
#       алиас="ID_голоса"   — выбор голоса по маркеру (v:алиас)

# --- Английский (EN) ---
[languages.en]
voice = "en-GB-SoniaNeural"
alt_voices = ["en-GB-RyanNeural", "en-GB-SoniaNeural", "en-US-GuyNeural", "en-US-RogerNeural", "en-US-SteffanNeural", "en-US-JennyNeural", "en-US-AriaNeural", "en-US-MichelleNeural", "en-AU-WilliamNeural", "en-AU-NatashaNeural"]
strict_no_fallback = true
markers = ["[EN]", "_en_", "(en)", "en:", "english:"]
detect_prefixes = ["en"]

[languages.en.suffix_filter]
enabled = true
suffix = "_en"

[languages.en.voice_aliases]
ryan = "en-GB-RyanNeural"
thomas = "en-GB-ThomasNeural"
guy = "en-US-GuyNeural"
steffan = "en-US-SteffanNeural"

# --- Русский (RU) ---
[languages.ru]
voice = "ru-RU-DmitryNeural"
# В исходном JSON у тебя поле называлось alt_voices_ru — здесь унифицируем как alt_voices
alt_voices = ["ru-RU-SergeyNeural", "ru-RU-AndreiNeural", "ru-RU-DmitryNeural", "ru-RU-SvetlanaNeural"]
strict_no_fallback = true
markers = ["[RU]", "[RUS]", "_ru_", "_рус_", "(ru)", "(рус)", "ru:", "рус:", "russian:"]
detect_prefixes = ["ru"]

[languages.ru.suffix_filter]
enabled = true
suffix = "_ru"

[languages.ru.voice_aliases]
dmitry = "ru-RU-DmitryNeural"
sergey = "ru-RU-SergeyNeural"
andrei = "ru-RU-AndreiNeural"
svetlana = "ru-RU-SvetlanaNeural"

# --- Украинский (UK) ---
[languages.uk]
voice = "uk-UA-PolinaNeural"
alt_voices = ["uk-UA-OstapNeural", "uk-UA-PolinaNeural"]
strict_no_fallback = true
markers = ["[UK]", "[UA]", "_uk_", "_ua_", "(uk)", "(ua)", "uk:", "ua:", "ukrainian:"]
detect_prefixes = ["uk", "uk-UA"]

[languages.uk.suffix_filter]
enabled = true
suffix = "_uk"

[languages.uk.voice_aliases]
ostap = "uk-UA-OstapNeural"
polina = "uk-UA-PolinaNeural"

# --------- Очистка/паузы ---------
# Символы, которые нужно полностью убрать из озвучки (скобки/подчёркивания и т.п.)
strip_symbols = ["(", ")", "[", "]", "{", "}", "_", "<", ">", "—"]

# Удалять эмодзи/экзотику (true/false)
strip_emojis = true

# Скорость речи в процентах (отрицательное — медленнее)
rate = -15

[pauses]
# Базовая пауза между фразами (мс)
between_phrases_ms = 600

[pauses.space_pause]
enabled = false
ms_per_space = 1     # пауза за КАЖДЫЙ пробел подряд (мс)

[pauses.newline_pause]
enabled = true
ms_per_newline = 600 # пауза за КАЖДЫЙ перенос строки (включая пустые строки)

# Доп. пауза в начале фразы, если она началась после переноса
start_of_line_extra_pause_ms = 600

# Разделители конца фразы (по ним режем текст)
sentence_delimiters = [".", ";", "!", "?", "\n"]

# Если true — создаём отдельные MP3 для каждого EN-голоса из alt_voices
multi_en_outputs = false

# Голосовые маркеры: (v:алиас) или (voice:алиас)
voice_marker_prefixes = ["v:", "voice:"]

# Если алиас не найден в voice_aliases — искать по подстроке среди [voice] + alt_voices
allow_partial_voice_match = true
