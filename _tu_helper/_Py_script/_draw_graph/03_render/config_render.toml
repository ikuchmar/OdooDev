# ===============================
# 03_render — конфигурация этапа рендера SVG/PNG
# ===============================
# Назначение: отрисовать итоговые SVG/PNG из файлов данных графа, НЕ меняя их содержимое.
# По умолчанию артефакты сохраняются там же, где лежит входной .toml.
#
# Совет: если нужен PNG — убедитесь, что установлен пакет `cairosvg`, иначе будет предупреждение и PNG не создастся.

[io]
# --- Где искать входные TOML с графами ---
input_dirs = [
    "D:/Entertaiment/Графы/Пример 1"
    # , "D:/Проекты/Диаграммы"
] # Список папок для сканирования

recursive = true

# Для 03-го этапа обычно берём результаты 02-го:
input_suffix = ".s02.autolayout.toml"

include_extensions = ["toml"]
exclude_patterns = []

# Режимы записи здесь влияют только на возможную перезапись выходных артефактов в целевой папке (если она совпадает с входной)
write_mode = "new"     # "new" | "inplace"
backup_original = false
dry_run = false
stop_on_error = true

[output]
# Где и как сохранять графику
save_svg = true
save_png = true
png_dpi = 200
open_in_browser = "svg"          # "svg" | "none"
# output_dir = ""                # (опционально) если пусто — сохранять рядом с входным .toml

[style]
# Параметры линий/стрелок, где применимо
curve = "auto"                   # "auto" | "straight" | "orthogonal"
# Доп. параметры (толщина линий, палитры, шрифты) можно добавить по мере надобности
label_offset = 8               # смещение подписи вдоль ребра (px)
connector_from = "auto"        # точка выхода ребра: "auto" | "center" | "side"
connector_to = "auto"          # точка входа ребра: "auto" | "center" | "side"
arrow_size = 8                 # размер стрелки (px)
arrow_thickness = 1.0          # толщина линии ребра/стрелки (px)
