Поле one2many используется для создания связи один-ко-многим между двумя моделями.
Оно позволяет связать одну запись в модели-родителе с несколькими записями в связанной модели.

Пример использования:

Предположим, у нас есть модель Product и модель ProductVariant.
Одному товару из модели Product может соответствовать несколько вариантов из модели ProductVariant.
Для этого мы создадим поле one2many в модели Product, которое будет связывать записи в обеих моделях.
поле one2many создается в модели Product и связывает ее с моделью ProductVariant через поле product_id.
=============================================================
class Product(models.Model):
    _name = 'product.product'

    name = fields.Char(string='Product Name', required=True)
    variants = fields.One2many('product.variant', 'product_id', string='Product Variants')

=============================================================
class ProductVariant(models.Model):
    _name = 'product.variant'

    name = fields.Char(string='Variant Name', required=True)
    product_id = fields.Many2one('product.product', string='Product', required=True)

=============================================================
Представление как дерево (variants) на форме Product

mode="tree"

В виде дерева, где каждый узел дерева представляет связанную запись,
а дочерние узлы дерева представляют связанные записи.
Например, если поле one2many связывает модель "Категория" с моделью "Товар", то дерево,
соответствующее этому полю, будет содержать информацию о каждой категории товаров,
а дочерние узлы будут представлять товары, относящиеся к данной категории.

=============================================================
<record model="ir.ui.view" id="product_form_view">
    <field name="name">product.form</field>
    <field name="model">product.product</field>
    <field name="arch" type="xml">
        <form string="Product Form">
            <sheet>
                <group>
                    <field name="name"/>
                    <field name="variants" mode="tree">
                        <tree>
                            <field name="name"/>
                        </tree>
                    </field>
                </group>
            </sheet>
        </form>
    </field>
</record>

=============================================================
Представление как таблица (variants) на форме Product

В виде таблицы, где каждая строка таблицы представляет связанную запись,
 а столбцы таблицы представляют поля связанных записей.
 Например, если поле one2many связывает модель "Заказ" с моделью "Строка заказа",
 то таблица, соответствующая этому полю, будет содержать информацию о каждой строке заказа,
 связанной с данным заказом.

Представление в виде таблицы позволяет показать более подробную информацию о каждом элементе,
путем представления его в виде колонок. В контексте модели "Заказ" и "Строка заказа",
это может быть таблица, где каждая строка показывает информацию о каждой строке заказа,
включая название продукта, количество, цену, сумму и т. д.

Дополнительные параметры (editable, deletable, create, duplicate, selectable)
позволяют настроить возможности редактирования, удаления, создания, копирования,
выделения строк таблицы и могут использоваться в обоих видах представления.
=============================================================
<record model="ir.ui.view" id="product_form_view">
    <field name="name">product.form</field>
    <field name="model">product.product</field>
    <field name="arch" type="xml">
        <form string="Product Form">
            <sheet>
                <group>
                    <field name="name"/>
                    <field name="variants" mode="tree">
                        <tree>
                            <field name="name"/>
                            <field name="product_id" invisible="1"/>
                        </tree>
                    </field>
                </group>
            </sheet>
        </form>
    </field>
</record>

Дополнительные параметры в представлениях поля one2many в Odoo позволяют настроить возможности
редактирования, удаления, создания, копирования, выделения строк таблицы.

Вот пример использования этих параметров в таблице one2many:

<field name="order_line">
    <tree editable="bottom">
        <field name="product_id"/>
        <field name="quantity"/>
        <field name="price_unit"/>
        <field name="price_total" readonly="1"/>
        <button name="action_duplicate" icon="fa-copy"/>
        <button name="action_delete" icon="fa-trash-o" attrs="{'invisible': [('state', '=', 'done')]}"/>
    </tree>
    <form>
        <sheet>
            <field name="product_id"/>
            <field name="quantity"/>
            <field name="price_unit"/>
        </sheet>
    </form>
    <kanban>
        <field name="product_id"/>
        <field name="quantity"/>
        <field name="price_unit"/>
    </kanban>
</field>

Здесь editable="bottom" позволяет редактировать только нижние строки таблицы,
 а deletable устанавливает возможность удаления строк таблицы.
 create и duplicate добавляют кнопки для создания и копирования строк,
 а selectable позволяет выделять строки таблицы.

В tree представлении заданы поля для отображения в таблице, а также кнопки для копирования и удаления строк.
attrs определяет условие видимости кнопки удаления, в данном случае кнопка будет скрыта, если значение поля state равно 'done'.

В form представлении заданы поля для редактирования строки таблицы.

В kanban представлении заданы поля для отображения в карточках таблицы.


=============================================================
widget="one2many_list"

Представление как список (variants) на форме Product
где каждый элемент списка представляет связанную запись,
а информация о каждой записи выводится в виде текста.
Например, если поле one2many связывает модель "Заказ" с моделью "Строка заказа",
то список, соответствующий этому полю, может выводить информацию о каждой строке заказа в виде текста,
например, в формате "Название товара - Количество - Цена".

Представление в виде списка показывает каждый элемент отдельно в виде строки,
 где каждая строка содержит набор полей элемента.
 Это подходит для случаев, когда элементы одинаковой структуры
 и не требуется подробная информация о каждом элементе.
 В контексте модели "Заказ" и "Строка заказа" это может быть список строк заказа с их названием и количеством.
=============================================================
<field name="order_lines" widget="one2many_list">
    <tree>
        <field name="name"/>
        <field name="product_id"/>
        <field name="quantity"/>
        <field name="price_unit"/>
        <field name="subtotal" sum="Total"/>
    </tree>
</field>




В виде графика, где каждая точка на графике представляет связанную запись, а оси графика представляют поля связанных записей. Например, если поле one2many связывает модель "Товар" с моделью "Продажи", то график, соответствующий этому полю, может отображать динамику продаж товара в течение определенного периода времени.

В виде календаря, где каждая ячейка календаря представляет связанную запись, а информация о каждой записи выводится в виде текста. Например, если поле one2many связывает модель "Событие" с моделью "Участники", то календарь, соответствующий этому полю, может отображать даты событий, а информация о каждом событии будет выводиться в соответствующей ячейке календаря.