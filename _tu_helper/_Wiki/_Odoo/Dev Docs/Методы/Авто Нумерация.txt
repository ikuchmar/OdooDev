----------------------------------------------------------------
__manifest__.py
----------------------------------------------------------------

{
     'depends': [base],
    'data': [
        'data/my_sequence.xml',
    ],
}

----------------------------------------------------------------
my_sequence.xml в папке data
----------------------------------------------------------------

<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data noupdate="1">
    <record id="sequence_id" model="ir.sequence">
      <field name="name">My Sequence</field>
      <field name="code">my_sequence</field>
      <field name="prefix">MY-</field>
      <field name="padding">5</field>
      <field name="number_next">1</field>
      <field name="number_increment">1</field>
      <field name="implementation">no_gap</field>
      <field name="company_id" eval="False"/>
    </record>
  </data>
</odoo>

name             -  название последовательности,
code             - уникальный идентификатор последовательности.
prefix           - префикс .
padding          - длину номера последовательности.
number_next      - начальное значение последовательности.
number_increment - шаг увеличения последовательности.


----------------------------------------------------------------

----------------------------------------------------------------
from odoo import models, fields, api

class MyClass(models.Model):
    _name = 'my.module.name'
    _description = 'My Module Description'

    name = fields.Char(string='Name', required=True, copy=False, readonly=True, default=lambda self: _('New'))
    sequence = fields.Integer(string='Sequence', default=1)

    @api.model
    def create(self, vals):
        if vals.get('name', _('New')) == _('New'):
            vals['name'] = self.env['ir.sequence'].next_by_code('my.module.name') or _('New')
        return super(MyClass, self).create(vals)

----------------------------------------------------------------
class MyModel(models.Model):
    _name = 'my_module.my_model'

    sequence = fields.Integer(string='Sequence', default=lambda self: self.env['ir.sequence'].next_by_code('my_module.my_model_sequence'))


