============================================
color: Цвет текста.
============================================
<p style="color: red;">Красный текст</p>

============================================
background-color: Цвет фона элемента.
============================================
<div style="background-color: yellow;"</div>

============================================
font-family: Шрифт текста.
============================================
<p style="font-family: Arial;">Текст в шрифте Arial</p>

============================================
font-size: Размер шрифта.
============================================
<p style="font-size: 24px;">Текст размера 24 пикселя</p>

============================================
font-style: Стиль шрифта.
============================================
<p style="font-style: italic;">Курсивный текст</p>

============================================
font-weight: Жирность шрифта.
============================================
<p style="font-weight: bold;">Жирный текст</p>

============================================
text-decoration: Декорация текста (например, подчеркивание).
============================================
<p style="text-decoration: underline;">Подчеркнутый текст</p>

============================================
text-align: Горизонтальное выравнивание текста. (Текст по центру)
============================================
<div style="text-align: center;"</div>

============================================
vertical-align: Вертикальное выравнивание текста. (Текст посередине)
============================================
<div style="vertical-align: middle;"</div>

============================================
padding: Внутренний отступ элемента. (Элемент с отступом 20 пикселей)
============================================
<div style="padding: 20px;"</div>

============================================
margin: Внешний отступ элемента.
============================================
<div style="margin: 20px;">
  Элемент с внешним отступом 20 пикселей
</div>

============================================
border: Граница элемента.
============================================
<div style="border: 1px solid black;">
  Элемент с границей
</div>

============================================
width: Ширина элемента.
============================================
<div style="width: 200px;">
  Элемент с шириной 200 пикселей
</div>

============================================
height: Высота элемента.
============================================
<div style="height: 200px;">
  Элемент с высотой 200 пикселей
</div>

============================================
display: Отображение элемента.
============================================
<div style="display: none;">
  Элемент, который не отображается
</div>

============================================
position: Позиционирование элемента.
<div style="position: absolute

============================================
float: Выравнивание элемента по горизонтали.
============================================
<div style="float: left;">
  Элемент, выровненный по левому краю
</div>

============================================
clear: Очистка обтекания.
============================================
<div style="clear: both;">
  Элемент с очисткой обтекания
</div>

============================================
background-image: Фоновое изображение элемента.
============================================
<div style="background-image: url('image.jpg');">
  Элемент с фоновым изображением
</div>

============================================
background-repeat: Повторение фонового изображения.
============================================
<div style="background-image: url('image.jpg'); background-repeat: no-repeat;">
  Элемент с фоновым изображением, которое не повторяется
</div>

============================================
background-position: Положение фонового изображения.
============================================
<div style="background-image: url('image.jpg'); background-position: center;">
  Элемент с фоновым изображением, которое находится по центру
</div>

============================================
opacity: Прозрачность элемента.
============================================
<div style="opacity: 0.5;">
  Элемент с прозрачностью 50%
</div>

============================================
box-shadow: Тень элемента.
============================================
<div style="box-shadow: 2px 2px 2px black;">
  Элемент с тенью
</div>

============================================
text-shadow: Тень текста.
============================================
<p style="text-shadow: 1px 1px 1px black;">Текст с тенью</p>

============================================
border-radius: Скругление углов границы.
============================================
<div style="border: 1px solid black; border-radius: 10px;">
  Элемент с скругленными углами границы
</div>


============================================
Стиль внутри тега <style> внутри <head>:
============================================

<head>
  <style>
    .my-header {
      color: blue;
      font-size: 24px;
      font-weight: bold;
    }
  </style>
</head>

Здесь мы создаем класс с именем .my-header, который задает синий цвет текста, размер шрифта 24 пикселя и жирный шрифт.

Применение созданного стиля к HTML элементу внутри тега <body>:

<body>
  <h1 class="my-header">Пример текста заголовка</h1>
  <p>Обычный текст</p>
</body>

Здесь мы используем созданный класс .my-header для заголовка первого уровня <h1>.
Теперь текст заголовка будет синим цветом, размером 24 пикселя и жирным шрифтом, а обычный текст будет иметь

============================================
!important
- данный стиль должен иметь наивысший приоритет при применении к элементу.
Оно позволяет переопределить любой стиль, который был задан ранее для данного элемента или группы элементов.
============================================
Например, если вы хотите, чтобы текст заголовка всегда был красным, несмотря на то, что есть стиль для всех заголовков,
который определяет их цвет, вы можете использовать ключевое слово !important следующим образом:

h1 {
  color: blue !important;
}

.special-header {
  color: red;
}
В данном примере все заголовки первого уровня будут иметь синий цвет текста,
даже если для них был задан стиль в другом месте с указанием другого цвета.
Однако, если вы хотите изменить цвет только для конкретного заголовка,
вы можете использовать класс .special-header, который будет иметь более высокий приоритет,
чем стиль для всех заголовков, но меньший, чем стиль с ключевым словом !important.