=================================
set() - создание пустого set
=================================
empty_set  = set()

=================================
{1, 2, 3} - создание set
=================================
my_set = {1, 2, 3}

=================================
add(4) - добавление элементов в set
=================================

my_set.add(4)
my_set.update([5, 6])

=================================
discard remove  Удаление элементов из set
=================================

my_set = {1, 2, 3, 4, 5}
my_set.discard(4)
my_set.remove(5)
print(my_set)

=================================
set1.intersection(set2) - пересечения двух множеств
=================================
set1 = {1, 2, 3, 4, 5}
set2 = {4, 5, 6, 7, 8}

set1.intersection(set2)

=================================
set1.union(set2) - объединение двух множеств
=================================
set1 = {1, 2, 3, 4, 5}
set2 = {4, 5, 6, 7, 8}

set1.union(set2)

=================================
set1.difference(set2) - разности двух множеств
=================================
set1 = {1, 2, 3, 4, 5}
set2 = {4, 5, 6, 7, 8}

set1.difference(set2)

===========================================
in  Проверка наличия элемента в set
===========================================

my_set = {1, 2, 3, 4, 5}
if 4 in my_set:
    print("Element is present in the set")
else:
    print("Element is not present in the set")

===========================================
 |=   оператор выполняет объединение двух множеств и присваивает результат обратно в левый операнд.
===========================================
pickings_without_quantities = {'picking1', 'picking2'}
picking = {'picking2', 'picking3'}

pickings_without_quantities |= picking
print(pickings_without_quantities)

Результат выполнения кода будет:

{'picking1', 'picking2', 'picking3'}
Обратите внимание, что оператор |= модифицирует исходное множество pickings_without_quantities.